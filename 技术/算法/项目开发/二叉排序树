```c
#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#define MAX 500
typedef struct Bnode
{
	int key;
	struct Bnode *left;
	struct Bnode *right;
}Bnode;
Bnode *btlnsert(int x,Bnode *root)
//root为二叉排排序树的根指针，x为新节点的关键字值
{
	Bnode *p,*q;
	int flag=0;//是否完成插入的标志
	p=(Bnode *)malloc(sizeof(Bnode));
	p->key=x;//为新节点关键字赋值
	p->right=NULL;//新节点要作为叶子结点插入
	p->left=NULL;
	if(root==NULL)
	{
		root=p;
		return p;
	}
	q=root;
	while(flag==0)//标志完成插入
	{
		if(q->key>x)
		{
			if(q->left!=NULL)
				q=q->left;
			else
			{
				q->left=p;//在左子数插入
				flag=1;
			}
		}
		else
		{
			if(q->right!=NULL)
				q=q->right;
			else
			{
				q->right=p;//在右子树插入
				flag=1;
			}
		}
	}
	return root;
}
void Inorder(struct Bnode *BD)
{
	if(BD!=NULL)
	{	
		Inorder(BD->left);
		printf("%5d", BD->key);
		Inorder(BD->right);
	}

}
void main()
{
	int i,length;
	int a[MAX];
	Bnode *root=NULL;
	printf("输入数组大小:");
	scanf("%d",&length);
	for(i=0;i<length;i++)
	{	
		scanf("%d",&a[i]);
		root=btlnsert(a[i],root);
	}
	printf("输出所给排序为:\n");
	Inorder(root);
}
```

